package com.rs.game.npc.glacor.attacks;import java.util.ArrayList;import java.util.List;import com.rs.game.Animation;import com.rs.game.Entity;import com.rs.game.Graphics;import com.rs.game.Hit;import com.rs.game.Hit.HitLook;import com.rs.game.World;import com.rs.game.WorldTile;import com.rs.game.npc.NPC;import com.rs.game.npc.glacor.Glacor;import com.rs.game.npc.glacor.GlacorAttacks;import com.rs.game.player.Player;import com.rs.game.tasks.WorldTask;import com.rs.game.tasks.WorldTasksManager;/** *  * @author Tyler Represents a Special Range Attack. */public class SpecialRangeAttack implements GlacorAttacks {	ArrayList<WorldTile> tile = new ArrayList<WorldTile>();	ArrayList<Player> targets = new ArrayList<Player>();	/**	 * 	 * Handles the adding of targets.	 * 	 * @param glacor	 * 	 * @param target	 */	public void addPossibleTargets(NPC glacor, Entity target) {		for (int regionId : glacor.getMapRegionsIds()) {			List<Integer> playerIndexes = World.getRegion(regionId)					.getPlayerIndexes();			if (playerIndexes != null) {				for (int npcIndex : playerIndexes) {					Player player = World.getPlayers().get(npcIndex);					if (player == null || player.isDead()							|| player.hasFinished() || !player.isRunning()							|| !player.withinDistance(glacor, 64))						continue;					targets.add(player);				}			}		}	}	@Override	public int attack(final Glacor glacor, final Entity target) {		target.setAttackedBy(glacor);		glacor.setNextAnimation(new Animation(9955));		int SPEED = 50;		glacor.setNextGraphics(new Graphics(905));		World.sendProjectile(glacor, new WorldTile(target), 963, 60, 40, SPEED,				30, 12, 0);		if (!tile.contains(new WorldTile(target)))			tile.add(new WorldTile(target));		addPossibleTargets(glacor, target);		WorldTasksManager.schedule(new WorldTask() {			@Override			public void run() {				if (tile.get(0) == null) {					tile.clear();					targets.clear();					this.stop();				}				World.sendGraphics(target, new Graphics(899), tile.get(0));				for (Player players : targets) {					if (players == null)						continue;					if (tile.get(0) == null)						continue;					if (players.matches(tile.get(0)) && !glacor.isDead())						players.applyHit(new Hit(glacor,								players.getHitpoints() / 2,								HitLook.REGULAR_DAMAGE));				}				tile.clear();				targets.clear();				this.stop();			}		}, 3);		return 3;	}}