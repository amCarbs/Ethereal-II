package com.rs.game.npc.glacor;import com.rs.game.Entity;import com.rs.game.WorldTile;import com.rs.game.npc.NPC;import com.rs.game.npc.familiar.Familiar;import com.rs.game.player.Player;import com.rs.utils.Utils;/** *  * @author Tyler *  */public class SappingGlacyte extends NPC {	/**	 * 	 * Serial UID	 */	private static final long serialVersionUID = 5322103406609998421L;	private NPC npc;	private Entity target;	private long spawnTime;	private Glacor glacor;	public SappingGlacyte(Glacor glacor, WorldTile tile, Entity target) {		super(14303, tile, -1, true, true);		this.getCombat().setTarget(target);		this.setForceMultiArea(true);		this.setForceMultiAttacked(true);		this.glacor = glacor;		this.target = target;		this.spawnTime = Utils.currentTimeMillis();	}	public boolean attackable(Entity target) {		return this.getCombat().getTarget() != null && target != null				&& getCombat().getTarget().getIndex() == target.getIndex();	}	/**	 * 	 * @return the glacor	 */	public Glacor getGlacor() {		return glacor;	}	/**	 * 	 * Gets the npc.	 * 	 * 	 * 	 * @return	 */	public NPC getNpc() {		return npc;	}	public long getSpawnTime() {		return spawnTime;	}	public Player getTarget() {		return (Player) target;	}	@Override	public void processNPC() {		super.processNPC();		target = this.getCombat().getTarget();		if (spawnTime + 300000 < Utils.currentTimeMillis()				&& !this.getCombat().underCombat()) {			finish();		}		if (target != null) {			if (target instanceof Familiar) {				Familiar npc = (Familiar) target;				target = npc.getOwner();			}			if (target instanceof Player) {				if (target.isDead())					this.finish();			}		}	}	@Override	public void sendDeath(Entity target) {		if (glacor != null) {			if (glacor.getGlacytes().size() == 1)				glacor.setEffect(GlacorEffect.SAPPING);			glacor.getGlacytes().remove(this);		}		super.sendDeath(target);	}	/**	 * 	 * @param glacor	 * 	 *            the glacor to set	 */	public void setGlacor(Glacor glacor) {		this.glacor = glacor;	}	/**	 * 	 * Sets the npc.	 * 	 * 	 * 	 * @param npc	 */	public void setNpc(NPC npc) {		this.npc = npc;	}	public void setSpawnTime(long spawnTime) {		this.spawnTime = spawnTime;	}	public void setTarget(Player target) {		this.target = target;	}}